Project Development Reflection
During the development process, the initial deployment and planning of the project were based on prior experience with Java development. However, as the project progressed, it became evident that the visual packages used in the UI module within the IntelliJ IDEA environment were not compatible with Colab. As a result, the project was modularized: the data acquisition and processing were completed in IDEA, while the UI and graphical visualization components were implemented in Colab.
Throughout the coding process, I reinforced my understanding of API usage and enhanced API security. Instead of exposing API calls directly, they were restructured to be invoked implicitly during initialization, improving both code robustness and security.
In the natural language module, although the initial plan involved using AI-based semantic APIs, limitations in implementation led to the adoption of a simpler dictionary-based keyword matching approach. Nevertheless, thanks to a modular architecture, the system remains scalable and maintainable, leaving room for future upgrades and enhancements.
Regarding the UI design, static charts were replaced with dynamic interactive graphs. User interaction was improved by implementing mouse-hover effects, thereby enhancing overall feedback and usability.
Overall, this project made effective use of AI tools to support development, significantly improving productivity and contributing meaningful optimizations to the codebase. The project not only reinforced existing knowledge but also provided valuable experience for future system development.